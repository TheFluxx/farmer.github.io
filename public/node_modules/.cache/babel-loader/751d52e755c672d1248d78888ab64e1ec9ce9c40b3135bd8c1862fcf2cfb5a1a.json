{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';const initialState={count:0,maximum:1,able:1,oneTap:10,multitapPrice:1000,energyPrice:2100,skin:'./img/coin-btn.png',skinPrice:1000000,isChanged:false,isBuy:false,currentActive:'secondSkin',localId:'secondSkin',loading:false,error:null,autofarm:false,hasLoaded:false,// добавлено новое состояние\ntasks_id_done:[]// добавлено новое состояние\n};// Thunk для получения данных пользователя\nexport const fetchUserPoints=createAsyncThunk('coin/fetchUserPoints',async telegram_id=>{const response=await fetch(\"https://69198d2284674affe33d7248d493d8a5.serveo.net/api/user/\".concat(telegram_id));if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;});// Thunk для добавления кликов и обновления энергии\nexport const addClicks=createAsyncThunk('coin/addClicks',async _ref=>{let{telegram_id,clicks,energy}=_ref;const response=await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/clicks',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({telegram_id,clicks,energy})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data.farm_coins;});// Thunk для покупки multitap\nexport const buyMultitap=createAsyncThunk('coin/buyMultitap',async _ref2=>{let{telegram_id,multitapPrice}=_ref2;const response=await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/multitap',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({telegram_id,multitapPrice})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;});// Thunk для покупки energy\nexport const buyEnergy=createAsyncThunk('coin/buyEnergy',async _ref3=>{let{telegram_id,price}=_ref3;const response=await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/energy',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({telegram_id,price})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;});// Thunk для покупки autofarm\nexport const buyAutofarm=createAsyncThunk('coin/buyAutofarm',async _ref4=>{let{telegram_id,price}=_ref4;const response=await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/autofarm',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({telegram_id,price})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;});// Thunk для покупки скинов\nexport const buySkin=createAsyncThunk('coin/buySkin',async _ref5=>{let{telegram_id,price,skin}=_ref5;const response=await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/skin',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({telegram_id,price,skin})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;});// Thunk для изменения скина\nexport const changeSkin=createAsyncThunk('coin/changeSkin',async _ref6=>{let{telegram_id,skin}=_ref6;const response=await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/change/skin',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({telegram_id,skin})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;});// Thunk для проверки подписки и обновления задач\nexport const checkSubscriptionAndUpdateTask=createAsyncThunk('coin/checkSubscriptionAndUpdateTask',async _ref7=>{let{telegram_id,channel_id,task_id,price}=_ref7;const response=await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/check-subscription',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({telegram_id,channel_id,task_id,price})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return{isMember:data.isMember,task_id};});export const coinSlice=createSlice({name:'coin',initialState,reducers:{increment:state=>{if(state.able>=10){state.count+=state.oneTap;}},increase:state=>{if(state.able>=10){state.able-=10;}},editSkin:(state,action)=>{state.skin=action.payload;},buySkinSl:state=>{state.isBuy=true;},setMaximum:state=>{state.able=state.maximum;},editActive:(state,action)=>{state.currentActive=action.payload;},editLocal:(state,action)=>{state.localId=action.payload;},raiseEnergy:state=>{if(state.able<state.maximum){state.able+=1;}}},extraReducers:builder=>{builder.addCase(fetchUserPoints.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchUserPoints.fulfilled,(state,action)=>{state.loading=false;state.count=action.payload.farm_coins;state.multitap=action.payload.multitap;state.oneTap=10+action.payload.multitap;state.maximum=action.payload.energy;state.autofarm=action.payload.autofarm;state.current_skin=action.payload.current_skin;state.skin=action.payload.current_skin;state.skins=action.payload.skins;state.able=action.payload.able;state.hasLoaded=true;// Устанавливаем флаг hasLoaded в true после первой загрузки\nstate.tasks_id_done=action.payload.tasks_id_done;}).addCase(fetchUserPoints.rejected,(state,action)=>{state.loading=false;state.error=action.error.message;}).addCase(addClicks.pending,state=>{state.loading=true;state.error=null;}).addCase(addClicks.fulfilled,(state,action)=>{state.loading=false;state.count=action.payload;}).addCase(addClicks.rejected,(state,action)=>{state.loading=false;state.error=action.error.message;}).addCase(buyMultitap.pending,state=>{state.loading=true;state.error=null;}).addCase(buyMultitap.fulfilled,(state,action)=>{state.loading=false;state.count=action.payload.farm_coins;state.multitap=action.payload.multitap;}).addCase(buyMultitap.rejected,(state,action)=>{state.loading=false;state.error=action.error.message;}).addCase(buyEnergy.pending,state=>{state.loading=true;state.error=null;}).addCase(buyEnergy.fulfilled,(state,action)=>{state.loading=false;state.count=action.payload.farm_coins;state.energy=action.payload.energy;}).addCase(buyEnergy.rejected,(state,action)=>{state.loading=false;state.error=action.error.message;}).addCase(buyAutofarm.pending,state=>{state.loading=true;state.error=null;}).addCase(buyAutofarm.fulfilled,(state,action)=>{state.loading=false;state.count=action.payload.farm_coins;state.autofarm=action.payload.autofarm;}).addCase(buyAutofarm.rejected,(state,action)=>{state.loading=false;state.error=action.error.message;}).addCase(buySkin.pending,state=>{state.loading=true;state.error=null;}).addCase(buySkin.fulfilled,(state,action)=>{state.loading=false;state.count=action.payload.farm_coins;state.skins=action.payload.skins;}).addCase(buySkin.rejected,(state,action)=>{state.loading=false;state.error=action.error.message;}).addCase(changeSkin.fulfilled,(state,action)=>{state.skin=action.payload.current_skin;}).addCase(changeSkin.rejected,(state,action)=>{state.error=action.error.message;}).addCase(checkSubscriptionAndUpdateTask.fulfilled,(state,action)=>{if(action.payload.isMember){state.tasks_id_done.push(action.payload.task_id);}}).addCase(checkSubscriptionAndUpdateTask.rejected,(state,action)=>{state.error=action.error.message;});}});export const{increment,increase,editSkin,buySkinSl,editActive,editLocal,raiseEnergy,setMaximum}=coinSlice.actions;export default coinSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","count","maximum","able","oneTap","multitapPrice","energyPrice","skin","skinPrice","isChanged","isBuy","currentActive","localId","loading","error","autofarm","hasLoaded","tasks_id_done","fetchUserPoints","telegram_id","response","fetch","concat","ok","Error","data","json","addClicks","_ref","clicks","energy","method","headers","body","JSON","stringify","farm_coins","buyMultitap","_ref2","buyEnergy","_ref3","price","buyAutofarm","_ref4","buySkin","_ref5","changeSkin","_ref6","checkSubscriptionAndUpdateTask","_ref7","channel_id","task_id","isMember","coinSlice","name","reducers","increment","state","increase","editSkin","action","payload","buySkinSl","setMaximum","editActive","editLocal","raiseEnergy","extraReducers","builder","addCase","pending","fulfilled","multitap","current_skin","skins","rejected","message","push","actions","reducer"],"sources":["C:/Users/zheme/OneDrive/Desktop/git_domen/farmer.github.io/src/store/slices/coinSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    count: 0,\r\n    maximum: 1,\r\n    able: 1,\r\n    oneTap: 10,\r\n    multitapPrice: 1000,\r\n    energyPrice: 2100,\r\n    skin: './img/coin-btn.png',\r\n    skinPrice: 1000000,\r\n    isChanged: false,\r\n    isBuy: false,\r\n    currentActive: 'secondSkin',\r\n    localId: 'secondSkin',\r\n    loading: false,\r\n    error: null,\r\n    autofarm: false,\r\n    hasLoaded: false, // добавлено новое состояние\r\n    tasks_id_done: [], // добавлено новое состояние\r\n\r\n};\r\n\r\n// Thunk для получения данных пользователя\r\nexport const fetchUserPoints = createAsyncThunk(\r\n    'coin/fetchUserPoints',\r\n    async (telegram_id) => {\r\n        const response = await fetch(`https://69198d2284674affe33d7248d493d8a5.serveo.net/api/user/${telegram_id}`);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n);\r\n\r\n// Thunk для добавления кликов и обновления энергии\r\nexport const addClicks = createAsyncThunk(\r\n    'coin/addClicks',\r\n    async ({ telegram_id, clicks, energy }) => {\r\n        const response = await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/clicks', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ telegram_id, clicks, energy })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data.farm_coins;\r\n    }\r\n);\r\n\r\n\r\n// Thunk для покупки multitap\r\nexport const buyMultitap = createAsyncThunk(\r\n    'coin/buyMultitap',\r\n    async ({ telegram_id, multitapPrice }) => {\r\n        const response = await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/multitap', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ telegram_id, multitapPrice })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n);\r\n\r\n// Thunk для покупки energy\r\nexport const buyEnergy = createAsyncThunk(\r\n    'coin/buyEnergy',\r\n    async ({ telegram_id, price }) => {\r\n        const response = await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/energy', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ telegram_id, price })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n);\r\n\r\n// Thunk для покупки autofarm\r\nexport const buyAutofarm = createAsyncThunk(\r\n    'coin/buyAutofarm',\r\n    async ({ telegram_id, price }) => {\r\n        const response = await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/autofarm', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ telegram_id, price })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n);\r\n\r\n// Thunk для покупки скинов\r\nexport const buySkin = createAsyncThunk(\r\n    'coin/buySkin',\r\n    async ({ telegram_id, price, skin }) => {\r\n        const response = await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/buy/skin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ telegram_id, price, skin })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n);\r\n\r\n// Thunk для изменения скина\r\nexport const changeSkin = createAsyncThunk(\r\n    'coin/changeSkin',\r\n    async ({ telegram_id, skin }) => {\r\n        const response = await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/change/skin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ telegram_id, skin })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n);\r\n// Thunk для проверки подписки и обновления задач\r\nexport const checkSubscriptionAndUpdateTask = createAsyncThunk(\r\n    'coin/checkSubscriptionAndUpdateTask',\r\n    async ({ telegram_id, channel_id, task_id, price }) => {\r\n        const response = await fetch('https://69198d2284674affe33d7248d493d8a5.serveo.net/api/check-subscription', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ telegram_id, channel_id, task_id, price }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return { isMember: data.isMember, task_id };\r\n    }\r\n);\r\n\r\nexport const coinSlice = createSlice({\r\n    name: 'coin',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state) => {\r\n            if (state.able >= 10) {\r\n                state.count += state.oneTap;\r\n            }\r\n        },\r\n        increase: (state) => {\r\n            if (state.able >= 10) {\r\n                state.able -= 10;\r\n            }\r\n        },\r\n        editSkin: (state, action) => {\r\n            state.skin = action.payload;\r\n        },\r\n        buySkinSl: (state) => {\r\n            state.isBuy = true;\r\n        },\r\n        setMaximum: (state) => {\r\n            state.able = state.maximum;\r\n        },\r\n        editActive: (state, action) => {\r\n            state.currentActive = action.payload;\r\n        },\r\n        editLocal: (state, action) => {\r\n            state.localId = action.payload;\r\n        },\r\n        raiseEnergy: (state) => {\r\n            if (state.able < state.maximum) {\r\n                state.able += 1;\r\n            }\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchUserPoints.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(fetchUserPoints.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.count = action.payload.farm_coins;\r\n                state.multitap = action.payload.multitap;\r\n                state.oneTap = 10 + action.payload.multitap;\r\n                state.maximum = action.payload.energy;\r\n                state.autofarm = action.payload.autofarm;\r\n                state.current_skin = action.payload.current_skin;\r\n                state.skin = action.payload.current_skin;\r\n                state.skins = action.payload.skins;\r\n                state.able = action.payload.able;\r\n                state.hasLoaded = true; // Устанавливаем флаг hasLoaded в true после первой загрузки\r\n                state.tasks_id_done = action.payload.tasks_id_done\r\n            })\r\n            .addCase(fetchUserPoints.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(addClicks.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(addClicks.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.count = action.payload;\r\n            })\r\n            .addCase(addClicks.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(buyMultitap.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(buyMultitap.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.count = action.payload.farm_coins;\r\n                state.multitap = action.payload.multitap;\r\n            })\r\n            .addCase(buyMultitap.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(buyEnergy.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(buyEnergy.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.count = action.payload.farm_coins;\r\n                state.energy = action.payload.energy;\r\n            })\r\n            .addCase(buyEnergy.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(buyAutofarm.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(buyAutofarm.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.count = action.payload.farm_coins;\r\n                state.autofarm = action.payload.autofarm;\r\n            })\r\n            .addCase(buyAutofarm.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(buySkin.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(buySkin.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.count = action.payload.farm_coins;\r\n                state.skins = action.payload.skins;\r\n            })\r\n            .addCase(buySkin.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(changeSkin.fulfilled, (state, action) => {\r\n                state.skin = action.payload.current_skin;\r\n            })\r\n            .addCase(changeSkin.rejected, (state, action) => {\r\n                state.error = action.error.message;\r\n            })\r\n            .addCase(checkSubscriptionAndUpdateTask.fulfilled, (state, action) => {\r\n                if (action.payload.isMember) {\r\n                    state.tasks_id_done.push(action.payload.task_id);\r\n                }\r\n            })\r\n            .addCase(checkSubscriptionAndUpdateTask.rejected, (state, action) => {\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { increment, increase, editSkin, buySkinSl, editActive, editLocal, raiseEnergy, setMaximum } = coinSlice.actions;\r\n\r\nexport default coinSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}